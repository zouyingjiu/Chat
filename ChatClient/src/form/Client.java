package form;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ICKelin
 */
public class Client extends javax.swing.JFrame {

    private String hostname = "localhost";
    private int DEFAULT_PORT = 7898;
    private String username;
    DatagramSocket client;
    Client.RecvThread recv;
    public Client() {
        initComponents();
    }
    
    class RecvThread extends Thread
    {
        private DatagramSocket client;
        private Client parent;
        public RecvThread(DatagramSocket client, Client parent)
        {
            this.client = client;
            this.parent = parent;
        }

        public void run()
        {
            while(true)
            {
                try {
                    byte buff[] = new byte[1024];
                    DatagramPacket packet=new DatagramPacket(buff,buff.length);
                    this.client.receive(packet);
                    String s=new String(packet.getData(),packet.getOffset(),packet.getLength(),"UTF-8");

                    MSG msg = new MSG();
                    String spls[] = s.split("\n");

                    msg.username = spls[0].substring(spls[0].indexOf(":")+1);
                    msg.type = spls[1].substring(spls[1].indexOf(":") + 1);
                    msg.msg = spls[2].substring(spls[2].indexOf(":") + 1);
                    msg.to = spls[3].substring(spls[3].indexOf(":") + 1);

                     //登录
                    if(msg.type.equals("T_LOGIN"))
                    {
                        parent.jTextArea3.append(msg.username + "\n");
                        parent.jTextArea1.append(msg.username + "上线\n");
                    }
                    //服务器确认登录
                    else if(msg.type.equals("T_ACK"))
                    {
                        parent.jTextArea3.append(msg.username + "\n");
                    }
                    //发消息
                    else if(msg.type.equals("T_MSG"))
                    {
                           parent.jTextArea1.append("用户:" + msg.username + "说:\n" + msg.msg + "\n");
                    }
                    //退出
                    else if(msg.type.equals("T_QUIT"))
                    {
                        parent.jTextArea1.append(msg.username + "下线\n");
                        System.out.println("用户:" + msg.username + "退出:");
                        //从文本域删除
                        String []text = parent.jTextArea3.getText().split("\n");
                        int i;
                        for(i = 0; i< text.length; i++)
                        {
                            if(text[i].equals(msg.username))
                            {
                                break;
                            }
                        }
                        String out = "";
                        for(int j = 0; j<text.length; j++)
                        {
                            if(i != j)
                            {
                                out = out + text[j] + "\n";
                            }
                        }
                        parent.jTextArea3.setText("");
                        parent.jTextArea3.append(out);
                    }
                } catch (IOException ex){
                    Logger.getLogger(RecvThread.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }

    
    public Client(DatagramSocket socket, String username)
    {
        this();
        this.client = socket;
        this.username = username;
        this.setTitle(username);
        this.setVisible(true);
        recv = new Client.RecvThread(socket, this);
        recv.start();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("发送");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("在线用户");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            InetAddress server=InetAddress.getByName(hostname);
            //发送线程
            BufferedReader userIn=new BufferedReader(new InputStreamReader(System.in));
            String inline;
            String text;
            text=this.jTextField1.getText();

            inline = "username:" + username +"\ntype:T_MSG\nMSG:" + text + "\nto:\n";
            byte[] data=inline.getBytes("UTF-8");
            data=inline.getBytes("UTF-8");
            DatagramPacket thepacket=new DatagramPacket(data,data.length,server,DEFAULT_PORT);
            client.send(thepacket);
        }catch (IOException ex) {
           ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            //发送退出消息
            InetAddress server=InetAddress.getByName(hostname);
            //发送线程
            BufferedReader userIn=new BufferedReader(new InputStreamReader(System.in));
            String inline;
            String text;
            text=this.jTextField1.getText();
            
            inline = "username:" + username +"\ntype:T_QUIT\nMSG:" + text + "\nto:\n";
            byte[] data=inline.getBytes("UTF-8");
            data=inline.getBytes("UTF-8");
            DatagramPacket thepacket=new DatagramPacket(data,data.length,server,DEFAULT_PORT);
            client.send(thepacket);
        }
        catch(Exception e){
            e.printStackTrace();
        }
        this.recv.stop();
        this.client.close();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
